{"posts":[{"title":"博客自动化部署","text":"经过部署自己的静态博客页面，我们已经可以发表文章到博客系统了，但是每次都需要编译、打包文件上传到云服务器，相同的流程能使用工具完成时最好的，接下来就结合git版本管理工具实现自动化部署流程，后续我们的操作就只有上传MD文件博客页面就能自动更新。 1、选择版本管理工具这里我们直接使用码云 ，速度相对较快，大家懂得，直接创建代码仓库将我们的博客代码push到远端，但是需要注意需忽略文件，如果使用idea可以下载.gitignore插件： 12345.idea*.imlnode_modulesoutdb.json 其中out是打包输出路径，可以从项目根目录_config.yml进行调整，db.json需要忽略，避免部署时产生冲突 2、云服务器安装运行环境 git下载 下载安装，或者通过yum进行安装 12345第一种：yum install git第二种：将下载后的二进制文件包解压，设置环境变量，可自行百度下载安装完成后查看版本git -version node下载 根据需要下载对应版本，本文下载Linux 二进制文件 (x64) 123456789解压压缩包tar -xvf node-v14.16.1-linux-x64.tar.xz重命名文件名mv node-v14.16.1-linux-x64 node14创建软连接，设置环境变量ln -s node14/bin/node /usr/bin/node查看版本node -vnpm -v 3、拉取代码并安装Hexo 拉取代码并手动部署 123456789101112拉取远程代码git clone https://gitee.com/代码仓库地址初始化node依赖包 npm install安装cnpmnpm install -g cnpm --registry=https://registry.npm.taobao.org通过cnpm安装hexocnpm install -g hexo-cli创建hexo软链，设置全局环境变量ln -s /export/app/kayla-blog/node_modules/hexo-cli/bin/hexo /usr/bin/hexo编译生成静态文件hexo g 设置用户名密码直接修改项目目录下.git/config，最后添加如下内容 12[credential] helper = store 4、创建自动化脚本如果以上步骤正常接下来就比较简单了，通过linux的cron定时执行脚本任务触发拉取最新博客内容和编译静态文件 创建cron任务 123456查看当前任务列表crontab -l编辑创建任务crontab -e表达式调用，每三分钟执行一次，执行hexo-g.sh结果写入hexo.out，注意：必须添加 2&gt;&amp;1 */3 * * * * /export/app/hexo-g.sh &gt;&gt; /export/app/hexo.out 2&gt;&amp;1 脚本内容hexo-g.sh 1234567891011121314#!/bin/bashsource /etc/profilesource ~/.bashrcecho &quot;开始自动编译，当前时间：$(date &quot;+%Y-%m-%d %H:%M:%S&quot;)&quot;cd /export/app/blogecho &quot;开始拉取gitee代码&quot;git pullecho &quot;代码拉取完成&quot;echo &quot;开始编译生成静态文件-&gt;out&quot;hexo gecho &quot;完成&quot; 测试结果可能部署过程中会遇到一些坑，解决有困难的同学可以放到评论区，大家一起解决，相互交流学习 12345678910111213141516开始自动编译，当前时间：2021-05-04 07:51:01开始拉取gitee代码From https://gitee.com/xxx/blog1ecc028..980f12b master -&gt; origin/masterUpdating 1ecc028..980f12bFast-forward...215\\232\\345\\256\\242\\347\\275\\221\\347\\253\\231.md&quot; | 66 +++++++++++++---------1 file changed, 38 insertions(+), 28 deletions(-)代码拉取完成开始编译生成静态文件-&gt;outINFO Validating configINFO Start processingINFO Files loaded in 270 msINFO Generated: 2021/05/03/从头搭建我的博客网站/index.htmlINFO 1 files generated in 76 ms完成 5、发布博客到各大内容网站自己的博客被更多的人看到并应用才能真正体现它的价值，可以将Markdown格式的博客信息放到 博客园、CSDN、掘金、简书等内容网站。","link":"/2021/05/12/%E5%8D%9A%E5%AE%A2/%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"},{"title":"从头搭建我的博客网站","text":"不断的摄入也需要输出，才能看到相对成本，便于更好进步，搭建一个博客更好的输出。 1、选择静态博客模板框架因为我没有太多的功能需求，目前选择使用静态博客框架，目前市面上框架也很多，比较主流的如：Jekyll（Ruby语言） Octopress（基于Jekyll） Hexo（Node语言） Hugo（GO语言）等，详细信息大家可以搜索引擎，本文选择Hexo来搭建博客网站。 2、安装本地开发环境 安装Node.js 地址：https://nodejs.org/zh-cn/ 默认会安装NPM包管理器 查看Node版本和npm版本：node -v/npm -v 安装最新版本就行 3、安装Hexo12345678npm install -g cnpm --registry=https://registry.npm.taobao.org 全局安装cnpmcnpm install -g hexo-cli 安装Hexo框架生成器mkdir blog 创建博客目录cd blog 进入目录hexo init 初始化博客生成器hexo s/hexo server 启动本地博客hexo n &quot;新建博客&quot; 新建博客文件hexo g 打包成静态文件，默认在public目录下 4、添加主题全局配置将以下配置添加至博客根目录下的_config.yml文件最后 123456789101112131415161718jsonContent: meta: false pages: false posts: title: true date: true path: true text: false raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true 5、接入评论功能Hexo默认支持的评论接口在themes/yilia/_config.yml配置文件中，多说、网易云跟帖、畅言、Disqus、Gitment，本文使用的是畅言接入。 6、上传静态文件到云服务器如果有云服务器（腾讯云，阿里云，百度云，京东云等）将静态博客文件上传到指定目录，使用nginx代理静态文件，就大功告成啦！ 7、个性化修改 所有的个性化主题配置基本都在themes/yilia/_config.yml下，大家可以自行摸索，具体可以参考：https://github.com/litten/hexo-theme-yilia 去除畅言评论发表下方的广告：themes/yilia/layout/_partial/post/changyan.ejs文件结尾添加： 123456&lt;style&gt; .section-service-w { margin-top: -250px !important; transform: scale(0) !important; }&lt;/style&gt; 最终效果如下： 截取文章部分内容作为摘要添加&lt;!-- more --&gt;至需要截取的Markdown文章相应的位置即可 分页设置如果当前博客数小于每页大小是不会展示分页组件的，分页配置通过Hexo配置文件进行设置","link":"/2021/05/12/%E5%8D%9A%E5%AE%A2/%E4%BB%8E%E5%A4%B4%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"},{"title":"IDEA插件之注释快捷展示【Show Comment】","text":"介绍 在结构树显示 文档注释； 在行末尾显示 文档注释； 输入 doc / docc 等生成 /** */； json 字段注释从 xxx.json.tsv 读取； json 字典注释从 键名.tsv 读取； 支持 “xx-类全名或简名.json” 文档注释与跳转到字段； 支持 从配置文件获取外部注释用于文件夹、资源、COBOL 等； 修改配置：设置 -&gt; 工具 -&gt; // Show Comment Global/Project； 使用自动显示注释，在阅读源码时比较实用，能迅速了解代码表达的意思，当然排除注释不真实的情况哈，这里列举几个实例。 结构树显示注释 行末尾显示注释 配置 Show Comment Global可针对注释的展现形式进行全局配置，如文本颜色、显示行数、前缀等。 Show Comment Project也可对项目注释是否展示进行配置，配置包含正则和排除正则表达式。 使用感想在对项目不太熟悉的情况下，对于快速了解项目，梳理业务逻辑，此插件还是比较实用的，提升工程熟悉进度。","link":"/2023/01/31/IDEA/IDEA%E6%8F%92%E4%BB%B6%E4%B9%8B%E6%B3%A8%E9%87%8A%E5%BF%AB%E6%8D%B7%E5%B1%95%E7%A4%BA%E3%80%90Show%20Comment%E3%80%91/"},{"title":"Linux下如何快速搜索大文件？","text":"工作中经常使用Linux进行部署应用服务，处理日志文件过大问题，最常见的是日志文件打满服务器影响服务器性能，以往我们需要手动查看可能的目录同时清理过的大文件，本篇文章就来介绍如何快速搜索系统下大文件的方法，提高工作效率。find 12# 搜索/目录下所有文件在1024K以上的文件find / -type f -size +10240k du 12# 查看当前目录下文件大小，倒序输出排名前十du -sh * | sort -rh | head -10 详细信息可以查看 【 菜鸟教程-Linux find 命令 】 【 菜鸟教程-Linux du 命令 】","link":"/2021/05/20/Linux/Linux%E4%B8%8B%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%90%9C%E7%B4%A2%E5%A4%A7%E6%96%87%E4%BB%B6%EF%BC%9F/"},{"title":"MAC命令行工具","text":"现代命令行工具，不想记忆复杂的命令就来看看这些吧。 现代命令行工具1234567891011121314151617181920212223242526272829303132fish是功能齐全的命令行外壳程序（如 bash 或 zsh），既智能又友好。Fish 支持强大的功能，例如语法突出显示，自动建议和仅需工作的制表符补全，而无需学习或配置。fzffzf 是一款使用 GO 语言编写的交互式的命令行工具.fdfd 是find命令的替代品，用于文件名搜索.rgripgrep 是grep命令的替代品，用来搜索文件内容.exaexa 是ls命令的替代品，可以彩色输出目录内容，更容易辨识.batbat 是cat命令的替代品，输出文本文件的内容，并且带有cat所没有的代码高亮和行号.ncduncdu 是du命令的替代品，用来显示每个目录占用的大小.brootbroot 可以看作增强版的ls替代品，实际是一个终端里面的文件管理.tldr该命令可以显示一些命令的常见用法.macvimVim是一个高级文本编辑器，旨在提供事实上的Unix编辑器'Vi'的强大功能，具有更完整的功能集.jqjq 是一款命令行下处理 JSON 数据的工具. 参考文章Fish shell 入门教程：https://www.ruanyifeng.com/blog/2017/05/fish_shell.htmlModern Unix：https://github.com/ibraheemdev/modern-unix","link":"/2024/05/20/%E5%B7%A5%E5%85%B7/MAC%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/"},{"title":"使用MAC进行软件开发","text":"今天来介绍一款Mac系统ORC识别软件Bob，相信ORC对大家来说都不陌生了，就是图片文字识别，日常生活中有不少场景需要从图片中读取文字内容，虽然Mac最新的系统已经自带图片ORC识别功能，但使用体验上还需要更上一层楼，废话不多说，直接进入正题。 介绍Bob官方介绍：Bob 是一款 macOS 平台 翻译 和 OCR 软件。详细介绍大家到GitHub搜索“Bob”就能看到，安装方式啥的照着抄就行了，个人感觉免费版本就够用了，当然要追求更好的体验的同志们可以用商店版。 使用我这边使用Bob主要还是用来做OCR，翻译功能用的不是很多，这里针对每一项功能大概演示下效果。 划词翻译需要选中目标词汇，点击功能菜单或者快捷键【⌥ + D】弹出翻译内容。 截图翻译框选（使用快捷键【⌥ + S】）图中的Bob直接进行翻译，并且识别到文字，可以直接复制内容，这个功能其实是使用最多的。 截图OCR快捷键：【⌥ + ⇧ + D】其他功能大家感兴趣可以自己尝试哦，整体上这块软件我使用频率还是蛮高的，作为程序员能省一步就是进步。 使用感想ORC已经非常成熟了，Bob确实能从一定程度上提升工作效率，随着AI技术的发展，作为程序员的我，对未来充满希望，但也有担忧，只有不断提升自身能力，利用更多的时间来做AI无法完成的事情，做有价值的事。","link":"/2023/02/16/%E5%B7%A5%E5%85%B7/Mac%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7%E4%B9%8BOCR%E8%AF%86%E5%88%AB%E3%80%90Bob%E3%80%91/"},{"title":"好用的Google浏览器插件","text":"好用的浏览器插件帮助我们高效的浏览网络资源，以下记录以作备用，下载链接可以跳转至 使用MAC进行软件开 Axure RP Extension for Chrome Chrome Better History 1Chrome Better History 比Chrome默认的历史记录查看更好用 crxMouse Chrome 1充分发掘鼠标的所有操作 功能包括:鼠标手势,超级拖曳,滚轮手势,摇杆手势,平滑滚动,标签页列表等 EverSync 1同步浏览器标签 Marinara: 番茄工作法 1番茄工作法（Pomodoro®）时间管理助理 Tampermonkey 广告终结者 1清除网页上的所有广告：浮动广告，购物广告，恶意弹窗，跟踪代码。让你浏览网页更快更清爽。广告终结者，你唯一需要的广告插件 掘金 1为程序员、设计师、产品经理每日发现优质内容 书签侧边栏 1在浏览器视图区左侧添加可调节的侧边栏管理您的书签 Tampermonkey 脚本 AC-baidu-重定向优化百度搜狗谷歌必应搜索_favicon_双列 12345671.繞過百度、搜狗、谷歌、好搜搜索結果中的自己的跳轉鏈接，直接訪問原始網頁-反正都能看懂 2.新增自定义网站拦截功能 3.添加Favicon显示 4.页面CSS 5.添加计数 6.开关选择以上功能 7.自动翻页功能 bilibili merged flv+mp4+ass+enhance 1bilibili/哔哩哔哩: 超清FLV下载,FLV合并,原生MP4下载,弹幕ASS下载,CC字幕转码ASS下载,AAC音频下载,MKV打包,播放体验增强,原生appsecret,不借助其他网站 Userscript+ : 显示当前网站所有可用的UserJS脚本 Jaeger 1显示当前网站的所有可用 UserJS(Tampermonkey)脚本 🔥持续更新🔥 CSDN广告完全过滤、人性化脚本优化：🆕 不用再登录了！让你体验令人惊喜的崭新CSDN 1⚡️拥有数项独家功能的最强CSDN脚本，不服比一比⚡️|🕶无需登录CSDN，获得比会员更佳的体验|🖥分辨率自适配，分屏不用滚动|💾超级预优化|🔖独家超级免会员|🏷独家原创文章免登录展开|🔌独家推荐内容自由开关|📠独家免登录复制|🔗独家防外链重定向|📝独家论坛未登录自动展开文章、评论|🌵全面净化|📈沉浸阅读|🧴净化剪贴板|📕作者信息文章顶部展示","link":"/2021/05/12/%E5%B7%A5%E5%85%B7/%E5%A5%BD%E7%94%A8%E7%9A%84Google%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6/"},{"title":"使用MAC进行软件开发","text":"作为一名程序员，我经历了从使用Windows、Ubuntu、MAC系统进行开发工作，最终我选择了MAC系统，原因主要有两个：软件运行流畅度、界面视觉享受高以下介绍使用MAC系统过程中，我常用的一些软件，浏览器插件相关可跳转至 好用的Google浏览器插件 1、包管理器：brewMAC系统使用比较好的包管理器，新系统没有预安装brew，需要自行安装，执行命令 1/bin/zsh -c &quot;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)&quot; 2、软件下载网站和浏览器插件下载网站下方相关软件如果你不方便从官网进行下载可通过以下网站进行下载并安装，有兴趣的同学可以自行探索哦软件下载： App Store：https://www.apple.com/app-store/ 柠檬精选：https://lemon.qq.com/lab/ MacWk：https://www.macwk.com/ 浏览器插件下载： Google网上应用商店：https://chrome.google.com/webstore/category/extensions 极简插件：https://chrome.zzzmh.cn/ Crx4Chrome：https://www.crx4chrome.com/ Tampermonkey插件下载： GreasyFork：https://greasyfork.org/zh-CN Userscript.Zone Search：https://www.userscript.zone/ OpenUserJS：https://openuserjs.org/ 3、开发环境：git maven推荐使用上边的包管理器brew进行安装，安装成功后即可全局访问 123456默认的安装包路径/usr/local/Cellar/安装 gitbrew install git安装 mavenbrew install maven 4、开发相关工具 IntelliJ IDEA 使用Toolbox App安装，管理IDEA，推荐插件可以前往 IDEA插件提高工作效率 FinalShell 国产SSH客户端，支持文件传输，评价还不错 SwitchHosts 本地host管理工具 Visual Studio Code 我是直接当做文本编辑器用了，打开速度较快 Dash 文档管理工具，付费的，这里提供一个我自己买的license 点击下载 draw.io 免费的画图软件，如UML等 5、MAC系统辅助工具 腾讯柠檬 MAC上的电脑管家，简洁 超级右键 类似Windows右键功能的软件，需要去Mac App Store下载 pap.er 桌面壁纸，需要去App Store下载 Bob 平台翻译和OCR软件 MenubarX 将菜单栏变成浏览器 Alfred Mac效率神器","link":"/2021/05/12/%E5%B7%A5%E5%85%B7/%E4%BD%BF%E7%94%A8MAC%E8%BF%9B%E8%A1%8C%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"},{"title":"十分钟安装部署大模型ChatGML-6B","text":"近期大模型可谓是如火如荼，按耐不住也想手动安装部署大模型，近距离接触大模型，废话不多说直接开始安装部署。 部署机器准备 可以在某某云申请GPU服务器，模型会跑的更快； 本地电脑配置尚佳也可以用来跑模型，配置不同响应效果略有区别； 安装环境目前绝大多数模型都是使用python语言，这里我们使用conda管理python环境。 安装miniconda可以从这里获取对应版本的安装程序：Latest Miniconda Installer Links，下载完成以后执行命令，这里我已Linux为例。 1bash Miniconda3-latest-Linux-x86_64.sh 按照提示进行安装，完成安装后配置~/.bashrc文件，添加如下一行配置。 1conda_dir=/root/miniconda3 执行如下命令使配置生效，之后你会看到命令行前出现base，代表conda生效。 1source ~/.bashrc 创建虚拟环境使用虚拟环境管理python依赖，防止环境被污染，当然如果仅仅部署一套程序，完全可以使用base环境，甚至可以直接使用基础python环境，习惯使用conda了。 123456# 创建虚拟环境ChatGLM-6Bconda create -n ChatGLM-6B python=3.11# 启用ChatGLM-6B虚拟环境conda activate ChatGLM-6B# 退出虚拟环境conda deactivate 安装Git如果没有git环境需要安装，可以通过git –version进行检查。 123yum install git# 方便下载模型权重yum install git-lfs 下载资源大模型部署涉及的资源基本都是 模型代码+模型权重，ChatGLM-6B开源代码参考 https://github.com/THUDM/ChatGLM-6B，里边安装步骤其实比较详细，这里简单顺下。 下载模型代码1git clone https://github.com/THUDM/ChatGLM-6B.git 下载模型权重模型可以从HF进行下载，这里我下载量化模型int4为例。 1234# 下载模型相关基础小文件git clone https://huggingface.co/THUDM/chatglm-6b-int4# 下载lfs类型文件，包含模型权重文件git lfs pull 可能下载速度过慢，可以直接手动下载后将文件放到目录下即可。 部署模型ChatGLM-6B有多个实例程序，如：web_demo、cli_demo，这里通过web_demo部署页面UI程序，修改根目录下web_demo.py程序。 12345tokenizer = AutoTokenizer.from_pretrained(&quot;THUDM/chatglm-6b&quot;, trust_remote_code=True)model = AutoModel.from_pretrained(&quot;THUDM/chatglm-6b&quot;, trust_remote_code=True).half().cuda()# 添加server_name使外部浏览器能够访问，否则是回环地址demo.queue().launch(share=False, inbrowser=True, server_name='0.0.0.0') 将其中的THUDM/chatglm-6b修改为上方下载模型权重的路径即可，以上代码配置的是有GPU的机器，如果是其他环境可以参考官方文档支持。 运行模型1234# 前台运行程序python web_demo.py# 后台运行，实时显示日志nohup python -u web_demo.py &gt; nohup.out 2&gt;&amp;1 &amp; CPU运行1model = AutoModel.from_pretrained(&quot;THUDM/chatglm-6b&quot;, trust_remote_code=True).float() MAC运行1model = AutoModel.from_pretrained(&quot;your local path&quot;, trust_remote_code=True).half().to('mps') mac运行如果遇到问题可以参考官方文档进行解决，https://github.com/THUDM/ChatGLM-6B#mac-部署 结果速览访问地址：http://127.0.0.1:7860/ 总结我是按量买的云服务，穷人真难，看着充值金额不断下降，心疼啊。本次带来大模型最为基础的部署指南，后续我会持续更新，包括大模型微调、大模型原理等内容，敬请期待哦。","link":"/2023/05/20/%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E5%8D%81%E5%88%86%E9%92%9F%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E5%A4%A7%E6%A8%A1%E5%9E%8BChatGML-6B/"},{"title":"更好用的浏览器书签管理器Flash Copilot 闪记","text":"浏览器虽然自带书签管理器，但不好用，最近通过B站发现一款好用的插件，快速检索书签、浏览历史、当前窗口和标注，可以通过快捷键快速唤起，经过一段时间使用总体还是很好用的。 安装Google浏览器安装Flash Copilot，直接应用商店搜索安装即可，如果网络限制可以在文章最后获取。 配置使用Flash Copilot需要登录账号，注册一个账号即可，配置只有一个简单的快捷键配置界面，根据自身需求配置。 使用通过快捷键快速呼出弹框并选择对应页面。 参考无法直接安装插件的小伙伴可以直接下载插件包导入到Google内核的浏览器 国内镜像。","link":"/2024/05/19/%E5%B7%A5%E5%85%B7/%E6%9B%B4%E5%A5%BD%E7%94%A8%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B9%A6%E7%AD%BE%E7%AE%A1%E7%90%86%E5%99%A8Flash%20Copilot%20%E9%97%AA%E8%AE%B0/"}],"tags":[{"name":"搭建","slug":"搭建","link":"/tags/%E6%90%AD%E5%BB%BA/"},{"name":"IDEA","slug":"IDEA","link":"/tags/IDEA/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"MAC","slug":"MAC","link":"/tags/MAC/"},{"name":"命令行","slug":"命令行","link":"/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"},{"name":"浏览器插件","slug":"浏览器插件","link":"/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6/"}],"categories":[{"name":"博客","slug":"博客","link":"/categories/%E5%8D%9A%E5%AE%A2/"},{"name":"工具","slug":"工具","link":"/categories/%E5%B7%A5%E5%85%B7/"},{"name":"大模型","slug":"大模型","link":"/categories/%E5%A4%A7%E6%A8%A1%E5%9E%8B/"}],"pages":[{"title":"关于我","text":"一名IT从业者，持续创业，保持进步！ 如果您发现博客中有任何问题，欢迎评论区指正； 声明：转发本博客内容请注明来源并附上链接。 个人作品集 智管有方； 私募大赛 京东智投宣传页 邮储银行U智宣传 中国金融科技创新大赛获奖作品 产品博客分享 kayla‘s blog","link":"/portfolio/index.html"}]}